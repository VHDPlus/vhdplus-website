{
  "docs": {
    "Get started": [
      "getstarted",
      "getstarted/drivers",
      "getstarted/comparison"
    ],
    "Guides": [
      "guides/helloworld",
      "guides/helloworld_simulate",
      "guides/nios2",
      "guides/vhdl_sim",
      "guides/verilog_sim"
    ],
    "VHDPlus IDE": [
      "ide/changelog",
      "ide/toolbar",
      "ide/projectexplorer",
      "ide/libraryexplorer",
      "ide/teamexplorer",
      "ide/serialmonitor",
      {
        "type": "category",
        "label": "Editor",
        "items": [
          "ide/editor/codecompletion",
          "ide/editor/autocorrection",
          "ide/editor/diagnostics",
          "ide/editor/quickinfo",
          "ide/editor/signalcreation"
        ]
      },
      {
        "type": "category",
        "label": "Tools",
        "items": [
          "ide/tools/importconverter",
          "ide/tools/stringconverter",
          "ide/tools/waitcalculator"
        ]
      }
    ],
    "VHDP Language": [
      "getstarted/vhdp",
      {
        "type": "category",
        "label": "Structural Syntax",
        "items": [
          "vhdp/structuralsyntax/main",
          "vhdp/structuralsyntax/process",
          "vhdp/structuralsyntax/thread",
          "vhdp/structuralsyntax/newcomponent",
          "vhdp/structuralsyntax/generate",
          "vhdp/structuralsyntax/stepfunction",
          "vhdp/structuralsyntax/function",

          "vhdp/structuralsyntax/component",
          "vhdp/structuralsyntax/generic",
          "vhdp/structuralsyntax/package",
          "vhdp/structuralsyntax/connections",
          "vhdp/structuralsyntax/vhdl"
        ]
      },
      {
        "type": "category",
        "label": "Parallel Operations",
        "items": [
          "vhdp/standardoperations/if",
          "vhdp/standardoperations/case",
          "vhdp/standardoperations/for",
          "vhdp/standardoperations/while"
        ]
      },
      {
        "type": "category",
        "label": "Sequential Operations",
        "items": [
          "vhdp/procedureoperations/if",
          "vhdp/procedureoperations/case",
          "vhdp/procedureoperations/seqfor",
          "vhdp/procedureoperations/while",
          "vhdp/procedureoperations/wait",
          "vhdp/procedureoperations/step"
        ]
      },
      {
        "type": "category",
        "label": "Datatypes",
        "items": [
          "vhdp/datatypes/bit",
          "vhdp/datatypes/stdlogic",
          "vhdp/datatypes/signed",
          "vhdp/datatypes/integer",
          "vhdp/datatypes/other"
        ]
      },
      {
        "type": "category",
        "label": "Declarations and Assignments",
        "items": [
          "vhdp/declarations/io",
          "vhdp/declarations/generic",
          "vhdp/declarations/signal",
          "vhdp/declarations/variable",
          "vhdp/declarations/constant"
        ]
      },
      {
        "type": "category",
        "label": "Operators",
        "items": [
          "vhdp/operators/logical",
          "vhdp/operators/math",
          "vhdp/operators/conversion",
          "vhdp/operators/concatation"
        ]
      }
    ],
    "Components": [
      "components/overview",
      "components/vhdpcore_max10",
      "components/max1000",
      "components/cyc1000",
      "components/cyc5000",
      "components/maxco2",
      {
        "type": "category",
        "label": "VHDPlus Extensions",
        "items": [
          "components/shield_max10",
          "components/camera",
          "components/onsemi_camera",
          "components/motor",
          "components/levelshifter",
          "components/audio",
          "components/wifi"
        ]
      }
    ],
    "Community": [ 
      "community/overview", 
      {
        "type": "category",
        "label": "Examples",
        "items": [
          "community/logic_analyzer",
          "community/motor",
          "community/camera",
          "community/neural_net",
          "community/light_tracker",
          "community/matrix",
          "community/spectrum"          
        ]
      }
    ]
  },
  "about": {
    "About": ["contact"],
    "Privacy Policy": ["privacy", "privacy_de"]
  }
}
